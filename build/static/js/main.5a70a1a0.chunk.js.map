{"version":3,"sources":["components/QueryBox.tsx","routes/Vote/index.tsx","components/CreateVoteBox.tsx","components/Voting.tsx","components/ListResponseItem.tsx","routes/Home/logo.png","config/network.ts","services/keplr.ts","config/keplr.ts","contexts/wallet.tsx","contexts/theme.tsx","utils/constants.ts","routes/Home/index.tsx","utils/getShortAddress.ts","components/Sidebar.tsx","app.tsx","index.tsx"],"names":["QueryBox","props","id","setId","useState","sx","border","borderRadius","backgroundColor","padding","margin","height","width","variant","gutterBottom","component","color","heading","subHeading","container","direction","xs","spacing","alignItems","justifyContent","item","sm","md","justifyItems","label","idText","onChange","event","target","value","onClick","Number","alert","function","toString","buttonText","walletOptions","hdPaths","makeCosmoshubPath","prefix","getSigner","async","DirectSecp256k1HdWallet","fromMnemonic","mnemonic","Vote","IS_TESTNET","process","argv","includes","JUNO_MAINNET_RPC","JUNO_TESTNET_RPC","MNEMONIC","CONTRACT_ADDRESS","signer","client","flag","setFlag","flag2","setFlag2","flag3","setFlag3","flag4","setFlag4","flag5","setFlag5","idArray","setIdArray","yesCountArray","setYesCountArray","noCountArray","setNoCountArray","ownerArray","setOwnerArray","deadlineArray","setDeadlineArray","SigningCosmWasmClient","connectWithSigner","gasPrice","GasPrice","fromString","account","getAccounts","console","log","executeResponse","execute","address","create_vote_box","deadline","at_height","owner","undefined","transactionHash","voteId","voteFlag","decision","vote","boxId","queryResponse","queryContractSmart","query_vote","yes_count","no_count","get_list","start_after","i","oldArray","voteList","map","index","key","yesCount","noCount","CreateVoteBox","setHeight","Voting","yesVote","setYesVote","noVote","setNoVote","ListResponseItem","pl","module","exports","mainnetConfig","chainId","chainName","addressPrefix","rpcUrl","feeToken","stakingToken","coinMap","ujuno","denom","fractionalDigits","fees","upload","init","exec","uniTestnetConfig","httpUrl","faucetUrl","ujunox","getConfig","network","loadKeplrWallet","config","anyWindow","window","getOfflineSigner","Error","keplr","experimentalSuggestChain","rpc","rest","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","bip44","coinType","keplrConfig","enable","getOfflineSignerAuto","signAmino","sign","Promise","resolve","throwNotInitialized","defaultContext","initialized","clear","name","balance","refreshBalance","getClient","updateSigner","setNetwork","WalletContext","React","useWallet","WalletProvider","children","setSigner","setClient","contextWithInit","setValue","length","coin","getBalance","push","useEffect","amount","Decimal","fromUserInput","createClient","error","getKey","localStorage","setItem","bind","Provider","INITIAL_THEME","isDarkTheme","setIsDarkTheme","isDark","ThemeContext","createContext","ThemeProvider","parseInt","NEXT_PUBLIC_TESTNET_CW20_MERKLE_DROP_CODE_ID","NEXT_PUBLIC_TESTNET_CW20_BASE_CODE_ID","NEXT_PUBLIC_TESTNET_CW20_BONDING_CODE_ID","NEXT_PUBLIC_TESTNET_CW20_STAKING_CODE_ID","NEXT_PUBLIC_TESTNET_CW1_SUBKEYS_CODE_ID","NEXT_PUBLIC_MAINNET_CW20_MERKLE_DROP_CODE_ID","NEXT_PUBLIC_MAINNET_CW20_BASE_CODE_ID","NEXT_PUBLIC_MAINNET_CW20_BONDING_CODE_ID","NEXT_PUBLIC_MAINNET_CW20_STAKING_CODE_ID","NEXT_PUBLIC_MAINNET_CW1_SUBKEYS_CODE_ID","NETWORK","NEXT_PUBLIC_NETWORK","NEXT_PUBLIC_S3_ENDPOINT","NEXT_PUBLIC_S3_REGION","NEXT_PUBLIC_S3_KEY","NEXT_PUBLIC_S3_SECRET","NEXT_PUBLIC_S3_BUCKET","Home","Grid","justifySelf","display","src","Logo","alt","style","Typography","paddingTop","textAlign","marginTop","getShortAddress","slice","concat","substring","Sidebar","wallet","initializing","setInitializing","connect","walletChange","then","catch","err","toast","message","disconnect","useKeplr","mobileOpen","setMobileOpen","handleDrawerToggle","walletText","addEventListener","connectWallet","useCallback","drawer","Box","Toolbar","List","ListItem","button","ListItemIcon","ListItemText","primary","Link","href","underline","CssBaseline","AppBar","position","ml","IconButton","aria-label","edge","mr","noWrap","flexShrink","Drawer","open","onClose","ModalProps","keepMounted","PaperProps","boxSizing","App","flexGrow","p","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a70a1a0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst QueryBox = (props: {\n    function: (arg0: string) => void;\n    heading:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n    subHeading:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n    idText: {} | null | undefined;\n    buttonText:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n}) => {\n    const [id, setId] = useState(\"0\");\n\n    const handleChange = (event: {\n        target: { value: React.SetStateAction<string> };\n    }) => {\n        setId(event.target.value);\n    };\n\n    const queryVoteBox = () => {\n        if (Number(id) < 1) {\n            alert(\"Ids start from 1\");\n        } else {\n            props.function((Number(id) - 1).toString());\n        }\n    };\n\n    return (\n        <Grid\n            sx={{\n                border: \"2px solid gray\",\n                borderRadius: \"7px 7px 7px 7px\",\n                backgroundColor: \"#1F2123\",\n                padding: 3,\n                margin: 3,\n                height: \"35%\",\n                width: \"100%\",\n            }}\n        >\n            <Typography\n                variant=\"h4\"\n                gutterBottom\n                component=\"div\"\n                sx={{ color: \"whitesmoke\" }}\n            >\n                {props.heading}\n            </Typography>\n            <Typography\n                variant=\"subtitle1\"\n                gutterBottom\n                component=\"div\"\n                sx={{ color: \"whitesmoke\" }}\n            >\n                {props.subHeading}\n            </Typography>\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                xs={12}\n                spacing={2}\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Grid item sm={12} md={8} justifyItems=\"center\">\n                    <TextField\n                        id=\"Query ID\"\n                        label={props.idText}\n                        variant=\"filled\"\n                        onChange={handleChange}\n                        sx={{ backgroundColor: \"white\" }}\n                    />\n                </Grid>\n\n                <Grid item sm={12} md={4} justifyItems=\"space-between\">\n                    <Button\n                        sx={{\n                            padding: \"10px\",\n                            border: \"1px solid\",\n                            borderRadius: \"5px\",\n                            color: \"whitesmoke\",\n                        }}\n                        onClick={queryVoteBox}\n                    >\n                        {props.buttonText}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default QueryBox;\n","import { makeCosmoshubPath } from \"@cosmjs/amino\";\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { GasPrice } from \"@cosmjs/stargate\";\nimport { DirectSecp256k1HdWallet } from \"@cosmjs/proto-signing\";\nimport React, { useState } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport CreateVoteBox from \"../../components/CreateVoteBox\";\nimport QueryBox from \"../../components/QueryBox\";\nimport Voting from \"../../components/Voting\";\nimport ListResponseItem from \"../../components/ListResponseItem\";\nimport Typography from \"@mui/material/Typography\";\n\n////////////////////////Wallet//////////////////////////////////\nconst walletOptions = {\n    hdPaths: [makeCosmoshubPath(0)],\n    prefix: \"juno\",\n};\n\nexport const getSigner = async (mnemonic: string) => {\n    const signer = await DirectSecp256k1HdWallet.fromMnemonic(\n        mnemonic,\n        walletOptions\n    );\n    return signer;\n};\n////////////////////////Wallet//////////////////////////////////\n\nconst Vote = () => {\n    const IS_TESTNET = !process.argv.includes(\"--mainnet\");\n\n    const JUNO_MAINNET_RPC = \"https://rpc.juno-1.deuslabs.fi\";\n    const JUNO_TESTNET_RPC = \"https://rpc.uni.juno.deuslabs.fi\";\n\n    //Transaction signlamak icin\n    const MNEMONIC =\n        \"term kangaroo lonely pact dove kiwi attitude swim deliver giggle resist pride similar turtle chicken sport phone foam mail wall account large settle firm\";\n\n    const CONTRACT_ADDRESS =\n        //Votebox contract adress\n        \"juno13qcfy3tlrs20430cx28w76c4fjlzsmhj9d0decyy30m5jsh70cps22vc06\";\n    //Serkan Abi Lockbox contract adress\n    // \"juno16u4knekeyqqs45ywxejm4x9v0m6rsy0xp5vlahrc5a0gp7sm78ks87gqw9\"\n\n    let signer: DirectSecp256k1HdWallet;\n    let client: SigningCosmWasmClient;\n\n    // const querySmartContract = async (message: Record<string, unknown>) => {\n    //     client.queryContractSmart(CONTRACT_ADDRESS, message)\n    // }\n\n    const createVB = async (height: Number) => {\n        setFlag(true);\n        signer = await getSigner(MNEMONIC);\n\n        client = await SigningCosmWasmClient.connectWithSigner(\n            IS_TESTNET ? JUNO_TESTNET_RPC : JUNO_MAINNET_RPC,\n            signer,\n            {\n                prefix: \"juno\",\n                gasPrice: GasPrice.fromString(\"0.0025ujunox\"),\n            }\n        );\n\n        const account = (await signer.getAccounts())[0];\n        console.log(\"account: \");\n        console.log(account);\n\n        const executeResponse = await client.execute(\n            account.address,\n            CONTRACT_ADDRESS,\n            {\n                create_vote_box: {\n                    deadline: { at_height: height },\n                    owner: account.address,\n                },\n            },\n            \"auto\"\n        );\n        console.log(executeResponse);\n        if (executeResponse === undefined) {\n            alert(\"Something went wrong with the VoteBox creation\");\n        } else {\n            alert(\"Your txhash : \" + executeResponse.transactionHash);\n        }\n        setFlag(false);\n    };\n\n    const vote = async (\n        voteId: string,\n        voteFlag: boolean,\n        decision: string\n    ) => {\n        setFlag2(true);\n        signer = await getSigner(MNEMONIC);\n\n        client = await SigningCosmWasmClient.connectWithSigner(\n            IS_TESTNET ? JUNO_TESTNET_RPC : JUNO_MAINNET_RPC,\n            signer,\n            {\n                prefix: \"juno\",\n                gasPrice: GasPrice.fromString(\"0.0025ujunox\"),\n            }\n        );\n\n        const account = (await signer.getAccounts())[0];\n        console.log(\"account: \");\n        console.log(account);\n\n        const executeResponse = await client.execute(\n            account.address,\n            CONTRACT_ADDRESS,\n            {\n                vote: {\n                    id: voteId,\n                    vote: voteFlag,\n                },\n            },\n            \"auto\"\n        );\n        console.log(executeResponse);\n        if (executeResponse === undefined) {\n            alert(\"Something went wrong\");\n        } else {\n            alert(\"You have voted \" + decision);\n        }\n        setFlag2(false);\n    };\n\n    const query = async (boxId: string) => {\n        setFlag3(true);\n\n        signer = await getSigner(MNEMONIC);\n\n        client = await SigningCosmWasmClient.connectWithSigner(\n            IS_TESTNET ? JUNO_TESTNET_RPC : JUNO_MAINNET_RPC,\n            signer,\n            {\n                prefix: \"juno\",\n                gasPrice: GasPrice.fromString(\"0.0025ujunox\"),\n            }\n        );\n\n        const account = (await signer.getAccounts())[0];\n        console.log(\"account: \");\n        console.log(account);\n\n        let id = Number(boxId) + 1;\n\n        const queryResponse = await client.queryContractSmart(\n            CONTRACT_ADDRESS,\n            {\n                query_vote: { id: id.toString() },\n            }\n        );\n        console.log(queryResponse);\n        alert(\n            \"id : \" +\n                queryResponse.id +\n                \"\\nowner : \" +\n                queryResponse.owner +\n                \"\\nyes count : \" +\n                queryResponse.yes_count +\n                \"\\nno count : \" +\n                queryResponse.no_count +\n                \"\\ndeadline block : \" +\n                queryResponse.deadline.at_height\n        );\n        setFlag3(false);\n    };\n\n    const queryList = async (boxId: string) => {\n        setFlag4(true);\n\n        signer = await getSigner(MNEMONIC);\n\n        client = await SigningCosmWasmClient.connectWithSigner(\n            IS_TESTNET ? JUNO_TESTNET_RPC : JUNO_MAINNET_RPC,\n            signer,\n            {\n                prefix: \"juno\",\n                gasPrice: GasPrice.fromString(\"0.0025ujunox\"),\n            }\n        );\n\n        const account = (await signer.getAccounts())[0];\n        console.log(\"account: \");\n        console.log(account);\n\n        const queryResponse = await client.queryContractSmart(\n            CONTRACT_ADDRESS,\n            {\n                get_list: { start_after: Number(boxId) },\n            }\n        );\n        for (let i = 0; i < 10; i++) {\n            // @ts-ignore\n            setIdArray((oldArray) => [\n                ...oldArray,\n                queryResponse.voteList[i].id,\n            ]);\n            // @ts-ignore\n            setYesCountArray((oldArray) => [\n                ...oldArray,\n                queryResponse.voteList[i].yes_count,\n            ]);\n            // @ts-ignore\n            setNoCountArray((oldArray) => [\n                ...oldArray,\n                queryResponse.voteList[i].no_count,\n            ]);\n            // @ts-ignore\n            setOwnerArray((oldArray) => [\n                ...oldArray,\n                queryResponse.voteList[i].owner,\n            ]);\n            // @ts-ignore\n            setDeadlineArray((oldArray) => [\n                ...oldArray,\n                queryResponse.voteList[i].deadline.at_height,\n            ]);\n        }\n        setFlag4(false);\n        setFlag5(true);\n        // return queryResponse\n    };\n\n    //////////////////////////////// UI ////////////////////////////\n    const [flag, setFlag] = useState(false);\n    const [flag2, setFlag2] = useState(false);\n    const [flag3, setFlag3] = useState(false);\n    const [flag4, setFlag4] = useState(false);\n    // eslint-disable-next-line\n    const [flag5, setFlag5] = useState(false);\n    const [idArray, setIdArray] = useState([]);\n    const [yesCountArray, setYesCountArray] = useState([]);\n    const [noCountArray, setNoCountArray] = useState([]);\n    const [ownerArray, setOwnerArray] = useState([]);\n    const [deadlineArray, setDeadlineArray] = useState([]);\n\n    return (\n        <Grid container>\n            <CreateVoteBox function={createVB} />\n            {flag && (\n                <Typography\n                    variant=\"overline\"\n                    gutterBottom\n                    component=\"div\"\n                    sx={{ color: \"gray\" }}\n                >\n                    Creating the votebox...\n                </Typography>\n            )}\n            <br />\n            <Voting function={vote} />\n            {flag2 && (\n                <Typography\n                    variant=\"overline\"\n                    gutterBottom\n                    component=\"div\"\n                    sx={{ color: \"gray\" }}\n                >\n                    Voting...\n                </Typography>\n            )}\n            <br />\n            <QueryBox\n                function={query}\n                heading=\"Query VoteBox\"\n                subHeading=\"Enter the id of the box\"\n                idText=\"VoteBox ID\"\n                buttonText=\"Query VoteBox\"\n            />\n            {flag3 && (\n                <Typography\n                    variant=\"overline\"\n                    gutterBottom\n                    component=\"div\"\n                    sx={{ color: \"gray\" }}\n                >\n                    Getting results...\n                </Typography>\n            )}\n            <br />\n            <QueryBox\n                function={queryList}\n                heading=\"Query VoteBox List\"\n                subHeading=\"Enter the id that the list of VoteBoxes will start from\"\n                idText=\"Starting VoteBox ID\"\n                buttonText=\"Query VoteBox List\"\n            />\n            {flag4 && (\n                <Typography\n                    variant=\"overline\"\n                    gutterBottom\n                    component=\"div\"\n                    sx={{ color: \"gray\" }}\n                >\n                    Getting the list of results...\n                </Typography>\n            )}\n            {idArray.map((item, index) => {\n                return (\n                    <ListResponseItem\n                        key={index}\n                        id={idArray[index]}\n                        yesCount={yesCountArray[index]}\n                        noCount={noCountArray[index]}\n                        owner={ownerArray[index]}\n                        deadline={deadlineArray[index]}\n                    />\n                );\n            })}\n        </Grid>\n    );\n};\n\nexport default Vote;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst CreateVoteBox = (props: { function: (arg0: number) => void }) => {\n    const [height, setHeight] = useState(\"0\");\n\n    const handleChange = (event: {\n        target: { value: React.SetStateAction<string> };\n    }) => {\n        setHeight(event.target.value);\n    };\n\n    const createVoteBox = () => {\n        props.function(Number(height));\n    };\n\n    return (\n        <Grid\n            sx={{\n                border: \"2px solid gray\",\n                borderRadius: \"7px 7px 7px 7px\",\n                backgroundColor: \"#1F2123\",\n                padding: 3,\n                margin: 3,\n                height: \"35%\",\n                width: \"100%\",\n            }}\n        >\n            <Typography\n                variant=\"h4\"\n                gutterBottom\n                component=\"div\"\n                sx={{ color: \"whitesmoke\" }}\n            >\n                Create Your VoteBox\n            </Typography>\n            <Typography\n                variant=\"subtitle1\"\n                gutterBottom\n                component=\"div\"\n                sx={{ color: \"whitesmoke\" }}\n            >\n                Enter the deadline height for the votebox and click create\n                button\n            </Typography>\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                xs={12}\n                spacing={2}\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Grid item sm={12} md={8} justifyItems=\"center\">\n                    <TextField\n                        id=\"deadline-height\"\n                        label=\"Deadline Height\"\n                        variant=\"filled\"\n                        onChange={handleChange}\n                        sx={{ backgroundColor: \"white\" }}\n                    />\n                </Grid>\n\n                <Grid item sm={12} md={4}>\n                    <Button\n                        sx={{\n                            padding: \"10px\",\n                            border: \"1px solid\",\n                            borderRadius: \"5px\",\n                            color: \"whitesmoke\",\n                        }}\n                        onClick={createVoteBox}\n                    >\n                        Create VoteBox\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default CreateVoteBox;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst Voting = (props: {\n    function: (arg0: string, arg1: boolean, arg2: string) => void;\n}) => {\n    const [id, setId] = useState(\"0\");\n    const [yesVote, setYesVote] = useState(false);\n    const [noVote, setNoVote] = useState(false);\n\n    const handleChange = (event: {\n        target: { value: React.SetStateAction<string> };\n    }) => {\n        setId(event.target.value);\n    };\n\n    const votedYes = () => {\n        setYesVote(true);\n        props.function(id, yesVote, \"YES\");\n    };\n\n    const votedNo = () => {\n        setNoVote(false);\n        props.function(id, noVote, \"NO\");\n    };\n\n    return (\n        <Grid\n            sx={{\n                border: \"2px solid gray\",\n                borderRadius: \"7px 7px 7px 7px\",\n                backgroundColor: \"#1F2123\",\n                padding: 3,\n                margin: 3,\n                height: \"35%\",\n                width: \"100%\",\n            }}\n        >\n            <Typography\n                variant=\"h4\"\n                gutterBottom\n                component=\"div\"\n                sx={{ color: \"whitesmoke\" }}\n            >\n                Vote\n            </Typography>\n            <Typography\n                variant=\"subtitle1\"\n                gutterBottom\n                component=\"div\"\n                sx={{ color: \"whitesmoke\" }}\n            >\n                Enter the id of the VoteBox and then enter your choice\n            </Typography>\n            <br />\n            <Grid\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                sx={{ width: \"100%\" }}\n            >\n                <Grid\n                    container\n                    direction=\"row\"\n                    xs={12}\n                    spacing={2}\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                >\n                    <Grid item sm={12} md={8} justifyItems=\"center\">\n                        <TextField\n                            id=\"votebox-id\"\n                            label=\"VoteBox ID\"\n                            variant=\"filled\"\n                            onChange={handleChange}\n                            sx={{ backgroundColor: \"white\" }}\n                        />\n                    </Grid>\n\n                    <Grid item sm={12} md={4} justifyItems=\"space-between\">\n                        <Button\n                            sx={{\n                                border: \"1px solid\",\n                                borderRadius: \"5px\",\n                                color: \"whitesmoke\",\n                            }}\n                            onClick={votedNo}\n                        >\n                            No\n                        </Button>\n                        <Button\n                            sx={{\n                                border: \"1px solid\",\n                                borderRadius: \"5px\",\n                                color: \"whitesmoke\",\n                            }}\n                            onClick={votedYes}\n                        >\n                            Yes\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Voting;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\n\nconst ListResponseItem = (props: {\n    id:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n    yesCount:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n    noCount:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n    owner:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n    deadline:\n        | boolean\n        | React.ReactChild\n        | React.ReactFragment\n        | React.ReactPortal\n        | null\n        | undefined;\n}) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            sx={{\n                border: \"2px solid gray\",\n                borderRadius: \"7px 7px 7px 7px\",\n                backgroundColor: \"#1F2123\",\n                padding: 3,\n                margin: 3,\n                height: \"35%\",\n                width: \"100%\",\n            }}\n        >\n            <Grid\n                container\n                direction=\"row\"\n                xs={12}\n                spacing={2}\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography\n                    variant=\"h5\"\n                    gutterBottom\n                    component=\"div\"\n                    sx={{ color: \"white\" }}\n                >\n                    ID: {props.id}\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    gutterBottom\n                    component=\"div\"\n                    pl={2}\n                    sx={{ color: \"white\" }}\n                >\n                    YES: {props.yesCount}\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    gutterBottom\n                    component=\"div\"\n                    pl={2}\n                    sx={{ color: \"white\" }}\n                >\n                    NO: {props.noCount}\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    gutterBottom\n                    component=\"div\"\n                    pl={2}\n                    sx={{ color: \"white\" }}\n                >\n                    DEADLINE: {props.deadline}\n                </Typography>\n            </Grid>\n            <hr />\n            <br />\n            <Typography\n                variant=\"h5\"\n                gutterBottom\n                component=\"div\"\n                sx={{ color: \"white\" }}\n            >\n                OWNER: <br />\n                {props.owner}\n            </Typography>\n        </Grid>\n    );\n};\n\nexport default ListResponseItem;\n","module.exports = __webpack_public_path__ + \"static/media/logo.d1c725d9.png\";","import { AppConfig } from \"./app\";\n\nexport const mainnetConfig: AppConfig = {\n    chainId: \"juno-1\",\n    chainName: \"Juno\",\n    addressPrefix: \"juno\",\n    rpcUrl: \"https://rpc.juno-1.deuslabs.fi\",\n    // httpUrl: \"https://rpc.juno-1.deuslabs.fi\",\n    feeToken: \"ujuno\",\n    stakingToken: \"ujuno\",\n    coinMap: {\n        ujuno: { denom: \"JUNO\", fractionalDigits: 6 },\n    },\n    gasPrice: 0.025,\n    fees: {\n        upload: 1500000,\n        init: 500000,\n        exec: 200000,\n    },\n};\n\nexport const uniTestnetConfig: AppConfig = {\n    chainId: \"uni-2\",\n    chainName: \"Uni\",\n    addressPrefix: \"juno\",\n    rpcUrl: \"https://rpc.uni.juno.deuslabs.fi\",\n    httpUrl: \"https://lcd.uni.juno.deuslabs.fi\",\n    faucetUrl: \"https://faucet.uni.juno.deuslabs.fi\",\n    feeToken: \"ujunox\",\n    stakingToken: \"ujunox\",\n    coinMap: {\n        ujunox: { denom: \"JUNOX\", fractionalDigits: 6 },\n    },\n    gasPrice: 0.025,\n    fees: {\n        upload: 1500000,\n        init: 500000,\n        exec: 200000,\n    },\n};\n\nexport const getConfig = (network: string): AppConfig => {\n    if (network === \"mainnet\") return mainnetConfig;\n    return uniTestnetConfig;\n};\n","import { keplrConfig } from \"../config/keplr\";\nimport { useEffect, useState } from \"react\";\nimport { OfflineSigner } from \"@cosmjs/proto-signing\";\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { Decimal } from \"@cosmjs/math\";\nimport { getConfig } from \"../config/network\";\nimport { AppConfig } from \"../config/app\";\nimport { useWallet } from \"../contexts/wallet\";\nimport toast from \"react-hot-toast\";\n\nexport async function createClient(\n    signer: OfflineSigner,\n    network: string\n): Promise<SigningCosmWasmClient> {\n    const config = getConfig(network);\n\n    return SigningCosmWasmClient.connectWithSigner(config.rpcUrl, signer, {\n        gasPrice: {\n            amount: Decimal.fromUserInput(\"0.0025\", 100),\n            denom: config.feeToken,\n        },\n    });\n}\n\nexport async function loadKeplrWallet(\n    config: AppConfig\n): Promise<OfflineSigner> {\n    const anyWindow: any = window;\n    if (!anyWindow.getOfflineSigner) {\n        throw new Error(\"Keplr extension is not available\");\n    }\n\n    await anyWindow.keplr.experimentalSuggestChain(keplrConfig(config));\n    await anyWindow.keplr.enable(config.chainId);\n\n    const signer = await anyWindow.getOfflineSignerAuto(config.chainId);\n    signer.signAmino = signer.signAmino ?? signer.sign;\n\n    return Promise.resolve(signer);\n}\n\nexport function useKeplr() {\n    const { clear, init, initialized, network } = useWallet();\n    const [initializing, setInitializing] = useState(false);\n    const config = getConfig(network);\n\n    const disconnect = () => {\n        localStorage.clear();\n        clear();\n    };\n\n    const connect = (walletChange = false) => {\n        setInitializing(true);\n\n        loadKeplrWallet(config)\n            .then((signer) => {\n                init(signer);\n                if (walletChange) setInitializing(false);\n            })\n            .catch((err) => {\n                setInitializing(false);\n                toast.error(err.message);\n            });\n    };\n\n    useEffect(() => {\n        if (!initialized) return;\n\n        setInitializing(false);\n    }, [initialized]);\n\n    return {\n        connect,\n        disconnect,\n        initializing,\n    };\n}\n","import { AppConfig } from './app'\n\nexport interface KeplrCoin {\n  readonly coinDenom: string\n  readonly coinMinimalDenom: string\n  readonly coinDecimals: number\n}\n\nexport interface KeplrConfig {\n  readonly chainId: string\n  readonly chainName: string\n  readonly rpc: string\n  readonly rest?: string\n  readonly bech32Config: {\n    readonly bech32PrefixAccAddr: string\n    readonly bech32PrefixAccPub: string\n    readonly bech32PrefixValAddr: string\n    readonly bech32PrefixValPub: string\n    readonly bech32PrefixConsAddr: string\n    readonly bech32PrefixConsPub: string\n  }\n  readonly currencies: readonly KeplrCoin[]\n  readonly feeCurrencies: readonly KeplrCoin[]\n  readonly stakeCurrency: KeplrCoin\n  readonly gasPriceStep: {\n    readonly low: number\n    readonly average: number\n    readonly high: number\n  }\n  readonly bip44: { readonly coinType: number }\n  readonly coinType: number\n}\n\nexport const keplrConfig = (config: AppConfig): KeplrConfig => ({\n  chainId: config.chainId,\n  chainName: config.chainName,\n  rpc: config.rpcUrl,\n  rest: config.httpUrl,\n  bech32Config: {\n    bech32PrefixAccAddr: `${config.addressPrefix}`,\n    bech32PrefixAccPub: `${config.addressPrefix}pub`,\n    bech32PrefixValAddr: `${config.addressPrefix}valoper`,\n    bech32PrefixValPub: `${config.addressPrefix}valoperpub`,\n    bech32PrefixConsAddr: `${config.addressPrefix}valcons`,\n    bech32PrefixConsPub: `${config.addressPrefix}valconspub`,\n  },\n  currencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n    {\n      coinDenom: config.coinMap[config.stakingToken].denom,\n      coinMinimalDenom: config.stakingToken,\n      coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n    },\n  ],\n  feeCurrencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n  ],\n  stakeCurrency: {\n    coinDenom: config.coinMap[config.stakingToken].denom,\n    coinMinimalDenom: config.stakingToken,\n    coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n  },\n  gasPriceStep: {\n    low: config.gasPrice / 2,\n    average: config.gasPrice,\n    high: config.gasPrice * 2,\n  },\n  bip44: { coinType: 118 },\n  coinType: 118,\n})\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { createClient } from \"../services/keplr\";\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { Coin } from \"@cosmjs/stargate\";\nimport { OfflineSigner } from \"@cosmjs/proto-signing\";\nimport { getConfig } from \"../config/network\";\n\ninterface WalletContextType {\n    readonly initialized: boolean;\n    readonly init: (signer: OfflineSigner) => void;\n    readonly clear: () => void;\n    readonly address: string;\n    readonly name: string;\n    readonly balance: readonly Coin[];\n    readonly refreshBalance: () => Promise<void>;\n    readonly getClient: () => SigningCosmWasmClient;\n    readonly getSigner: () => OfflineSigner;\n    readonly updateSigner: (singer: OfflineSigner) => void;\n    readonly network: string;\n    readonly setNetwork: (network: string) => void;\n}\n\nfunction throwNotInitialized(): any {\n    throw new Error(\"Not yet initialized\");\n}\n\nconst defaultContext: WalletContextType = {\n    initialized: false,\n    init: throwNotInitialized,\n    clear: throwNotInitialized,\n    address: \"\",\n    name: \"\",\n    balance: [],\n    refreshBalance: throwNotInitialized,\n    getClient: throwNotInitialized,\n    getSigner: throwNotInitialized,\n    updateSigner: throwNotInitialized,\n    network: \"\",\n    setNetwork: throwNotInitialized,\n};\n\nexport const WalletContext =\n    React.createContext<WalletContextType>(defaultContext);\n\nexport const useWallet = (): WalletContextType =>\n    React.useContext(WalletContext);\n\nexport function WalletProvider({\n    children,\n    network,\n    setNetwork,\n}: any): JSX.Element {\n    const [signer, setSigner] = useState<OfflineSigner>();\n    const [client, setClient] = useState<SigningCosmWasmClient>();\n    const config = getConfig(network);\n\n    const contextWithInit = {\n        ...defaultContext,\n        init: setSigner,\n        network,\n        setNetwork,\n    };\n    const [value, setValue] = useState<WalletContextType>(contextWithInit);\n\n    const clear = (): void => {\n        setValue({ ...contextWithInit });\n        setClient(undefined);\n        setSigner(undefined);\n    };\n\n    // Get balance for each coin specified in config.coinMap\n    async function refreshBalance(\n        address: string,\n        balance: Coin[]\n    ): Promise<void> {\n        if (!client) return;\n\n        balance.length = 0;\n        for (const denom in config.coinMap) {\n            const coin = await client.getBalance(address, denom);\n            if (coin) balance.push(coin);\n        }\n\n        setValue({ ...value, balance });\n    }\n\n    const updateSigner = (signer: OfflineSigner) => {\n        setSigner(signer);\n    };\n\n    useEffect(() => {\n        if (!signer) return;\n        (async function updateClient(): Promise<void> {\n            try {\n                const client = await createClient(signer, network);\n                setClient(client);\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n        // eslint-disable-next-line\n    }, [signer]);\n\n    useEffect(() => {\n        if (!signer || !client) return;\n\n        const balance: Coin[] = [];\n\n        (async function updateValue(): Promise<void> {\n            const address = (await signer.getAccounts())[0].address;\n\n            const anyWindow: any = window;\n            const key = await anyWindow.keplr.getKey(config.chainId);\n\n            await refreshBalance(address, balance);\n\n            localStorage.setItem(\"wallet_address\", address);\n\n            setValue({\n                initialized: true,\n                init: () => {},\n                clear,\n                address,\n                name: key.name || \"\",\n                balance,\n                refreshBalance: refreshBalance.bind(null, address, balance),\n                getClient: () => client,\n                getSigner: () => signer,\n                updateSigner,\n                network,\n                setNetwork,\n            });\n        })();\n        // eslint-disable-next-line\n    }, [client]);\n\n    useEffect(() => {\n        setValue({ ...value, network });\n        // eslint-disable-next-line\n    }, [network]);\n\n    return (\n        <WalletContext.Provider value={value}>\n            {children}\n        </WalletContext.Provider>\n    );\n}\n","import React, { createContext, ReactNode, useContext } from 'react'\n\nexport interface IThemeContext {\n  isDarkTheme: boolean\n  setIsDarkTheme: (isDark: boolean) => void\n}\n\nexport const INITIAL_THEME: IThemeContext = {\n  isDarkTheme: true,\n  setIsDarkTheme: (isDark: boolean) => {},\n}\n\nexport const ThemeContext = createContext<IThemeContext>(INITIAL_THEME)\n\nexport function ThemeProvider({\n  children,\n  isDarkTheme,\n  setIsDarkTheme,\n}: {\n  children: ReactNode\n  isDarkTheme: boolean\n  setIsDarkTheme: (isDark: boolean) => void\n}) {\n  let value = { ...INITIAL_THEME, isDarkTheme, setIsDarkTheme }\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n}\n\nexport function useTheme() {\n  return useContext(ThemeContext)\n}\n","export const TESTNET_CW20_MERKLE_DROP_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_TESTNET_CW20_MERKLE_DROP_CODE_ID as string,\n  10\n)\nexport const TESTNET_CW20_BASE_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_TESTNET_CW20_BASE_CODE_ID as string,\n  10\n)\nexport const TESTNET_CW20_BONDING_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_TESTNET_CW20_BONDING_CODE_ID as string,\n  10\n)\nexport const TESTNET_CW20_STAKING_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_TESTNET_CW20_STAKING_CODE_ID as string,\n  10\n)\nexport const TESTNET_CW1_SUBKEYS_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_TESTNET_CW1_SUBKEYS_CODE_ID as string,\n  10\n)\n\nexport const MAINNET_CW20_MERKLE_DROP_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_MAINNET_CW20_MERKLE_DROP_CODE_ID as string,\n  10\n)\nexport const MAINNET_CW20_BASE_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_MAINNET_CW20_BASE_CODE_ID as string,\n  10\n)\nexport const MAINNET_CW20_BONDING_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_MAINNET_CW20_BONDING_CODE_ID as string,\n  10\n)\nexport const MAINNET_CW20_STAKING_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_MAINNET_CW20_STAKING_CODE_ID as string,\n  10\n)\nexport const MAINNET_CW1_SUBKEYS_CODE_ID = parseInt(\n  process.env.NEXT_PUBLIC_MAINNET_CW1_SUBKEYS_CODE_ID as string,\n  10\n)\n\nexport const NETWORK = process.env.NEXT_PUBLIC_NETWORK as string\n\nexport const S3_ENDPOINT = process.env.NEXT_PUBLIC_S3_ENDPOINT as string\nexport const S3_REGION = process.env.NEXT_PUBLIC_S3_REGION as string\nexport const S3_KEY = process.env.NEXT_PUBLIC_S3_KEY as string\nexport const S3_SECRET = process.env.NEXT_PUBLIC_S3_SECRET as string\nexport const S3_BUCKET = process.env.NEXT_PUBLIC_S3_BUCKET as string\n\nexport interface AirdropProps {\n  name: string\n  contractAddress: string\n  merkleRoot: string\n  cw20TokenAddress: string\n  totalAmount: number\n  activeStep: string\n  start: number | null\n  startType: string | null\n  expiration: number | null\n  expirationType: string | null\n  processing?: boolean\n}\n","import { Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport Logo from \"./logo.png\";\nconst Home = () => {\n    return (\n        <Grid container sm={12} justifySelf=\"center\" justifyItems=\"center\">\n            <Grid\n                item\n                xs={12}\n                sx={{\n                    justifyContent: \"center !important\",\n                    display: \"inline-grid\",\n                }}\n            >\n                <img\n                    src={Logo}\n                    alt=\"logo\"\n                    width={400}\n                    height={400}\n                    style={{\n                        border: \"3px solid gray\",\n                        borderRadius: \"7px 7px 7px 7px\",\n                    }}\n                />\n            </Grid>\n\n            <Grid>\n                <Typography\n                    variant=\"h3\"\n                    sx={{\n                        color: \"whitesmoke\",\n                        paddingTop: \"30px\",\n                        textAlign: \"center\",\n                    }}\n                >\n                    Welcome to VoteBox!\n                </Typography>\n\n                <Typography\n                    variant=\"h5\"\n                    sx={{ color: \"whitesmoke\", textAlign: \"center\" }}\n                    marginTop={5}\n                >\n                    With VoteBox, you can create your own vote boxes and people\n                    from all around the world can participate in the voting\n                    process with total anonymity.\n                </Typography>\n\n                <Typography\n                    variant=\"h5\"\n                    sx={{\n                        color: \"whitesmoke\",\n                        textAlign: \"center\",\n                    }}\n                    marginTop={5}\n                >\n                    Let&apos;s start with your first VoteBox!\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Home;\n","const getShortAddress = (address: string) => {\n  return address.slice(0, 8).concat('.....') + address.substring(36)\n}\n\nexport default getShortAddress\n","import React, { useEffect, useCallback } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Drawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\nimport HowToVoteIcon from \"@mui/icons-material/HowToVote\";\nimport { useWallet } from \"../contexts/wallet\";\nimport { useKeplr } from \"../services/keplr\";\nimport getShortAddress from \"../utils/getShortAddress\";\n\nexport const drawerWidth = 240;\n\nexport function Sidebar(): JSX.Element {\n    const wallet = useWallet();\n    const keplr = useKeplr();\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n    const walletText = wallet.initialized\n        ? wallet.name || getShortAddress(wallet.address)\n        : \"Connect Wallet\";\n\n    useEffect(() => {\n        // Used for listening keplr account changes\n        window.addEventListener(\"keplr_keystorechange\", () => {\n            keplr.connect(true);\n        });\n    }, []);\n\n    const connectWallet = useCallback(() => keplr.connect(), [keplr]);\n\n    const walletOnClick = () => {\n        if (wallet.initialized) {\n            keplr.disconnect();\n        } else {\n            connectWallet();\n        }\n    };\n\n    const drawer = (\n        <Box>\n            <Toolbar />\n            <List>\n                <ListItem button onClick={walletOnClick}>\n                    <ListItemIcon>\n                        <AddCardIcon sx={{ color: \"white\" }} />\n                    </ListItemIcon>\n                    {keplr.initializing ? (\n                        <ListItemText primary={\"Connect Wallet\"} />\n                    ) : (\n                        <ListItemText primary={walletText} />\n                    )}\n                </ListItem>\n                <Link href=\"/\" underline=\"none\" sx={{ color: \"white\" }}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <HomeIcon sx={{ color: \"white\" }} />\n                        </ListItemIcon>\n                        <ListItemText primary={\"Home\"} />\n                    </ListItem>\n                </Link>\n                <Link href=\"/vote\" underline=\"none\" sx={{ color: \"white\" }}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <HowToVoteIcon sx={{ color: \"white\" }} />\n                        </ListItemIcon>\n                        <ListItemText primary={\"Vote\"} />\n                    </ListItem>\n                </Link>\n            </List>\n        </Box>\n    );\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                backgroundColor: \"#1F2123 !important\",\n            }}\n        >\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                sx={{\n                    width: { sm: `calc(100% - ${drawerWidth}px)` },\n                    ml: { sm: `${drawerWidth}px` },\n                }}\n            >\n                <Toolbar sx={{ backgroundColor: \"#1F2123\" }}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        sx={{ mr: 2, display: { sm: \"none\" } }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h5\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ textAlign: \"center\", width: \"100%\" }}\n                    >\n                        VoteBox\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Box\n                component=\"nav\"\n                sx={{\n                    width: { sm: drawerWidth },\n                    flexShrink: { sm: 0 },\n                }}\n                aria-label=\"mailbox folders\"\n            >\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Drawer\n                    variant=\"temporary\"\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    PaperProps={{\n                        sx: {\n                            backgroundColor: \"#1F2123\",\n                            color: \"white\",\n                        },\n                    }}\n                    sx={{\n                        display: { xs: \"block\", sm: \"none\" },\n                        \"& .MuiDrawer-paper\": {\n                            boxSizing: \"border-box\",\n                            width: drawerWidth,\n                        },\n                    }}\n                >\n                    {drawer}\n                </Drawer>\n                <Drawer\n                    PaperProps={{\n                        sx: {\n                            backgroundColor: \"#1F2123\",\n                            color: \"white\",\n                        },\n                    }}\n                    variant=\"permanent\"\n                    sx={{\n                        display: { xs: \"none\", sm: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            boxSizing: \"border-box\",\n                            width: drawerWidth,\n                        },\n                    }}\n                    open\n                >\n                    {drawer}\n                </Drawer>\n            </Box>\n        </Box>\n    );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { WalletProvider } from \"./contexts/wallet\";\nimport { ThemeProvider } from \"./contexts/theme\";\nimport { Toaster } from \"react-hot-toast\";\nimport Vote from \"./routes/Vote\";\nimport { NETWORK } from \"./utils/constants\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Home from \"./routes/Home\";\nimport { drawerWidth, Sidebar } from \"./components/Sidebar\";\n\nexport function App(): JSX.Element {\n    const [isDarkTheme, setIsDarkTheme] = useState(true);\n    const [network, setNetwork] = useState(NETWORK);\n\n    return (\n        <ThemeProvider\n            isDarkTheme={isDarkTheme}\n            setIsDarkTheme={setIsDarkTheme}\n        >\n            <WalletProvider network={network} setNetwork={setNetwork}>\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        backgroundColor: \"#1F2123 !important\",\n                    }}\n                >\n                    <Sidebar />\n\n                    <CssBaseline />\n\n                    <Box\n                        component=\"main\"\n                        sx={{\n                            flexGrow: 1,\n                            p: 3,\n                            width: { sm: `calc(100% - ${drawerWidth}px)` },\n                        }}\n                    >\n                        <Router basename={process.env.PUBLIC_URL}>\n                            <Box marginTop={10}>\n                                <Toaster position=\"top-right\" />\n                                <Switch>\n                                    <Route exact path=\"/\" component={Home} />\n                                    <Route\n                                        exact\n                                        path=\"/vote\"\n                                        component={Vote}\n                                    />\n                                </Switch>\n                            </Box>\n                        </Router>\n                    </Box>\n                </Box>\n            </WalletProvider>\n        </ThemeProvider>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./app\";\nimport \"./index.less\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}